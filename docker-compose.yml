version: '3.8'

services:
  # MongoDB Database
  mongo:
    image: mongo:7
    container_name: mercadosniper-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: mercadosniper
    volumes:
      - mongo_data:/data/db
      - ./backend/scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - mercadosniper-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: mercadosniper-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_data:/data
    networks:
      - mercadosniper-network

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: mercadosniper-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      # Database Configuration
      DATABASE_URL: mongodb://admin:password123@mongo:27017/mercadosniper?authSource=admin
      DATABASE_NAME: mercadosniper
      REDIS_URL: redis://:redis123@redis:6379
      
      # API Configuration
      DEBUG: false
      HOST: 0.0.0.0
      PORT: 8000
      ALLOWED_ORIGINS: '["http://localhost:3000", "https://yourdomain.com"]'
      
      # Scraping Configuration
      SCRAPING_DELAY_MIN: 2.0
      SCRAPING_DELAY_MAX: 5.0
      SCRAPING_TIMEOUT: 20
      SCRAPING_MAX_RETRIES: 3
      
      # Security
      SECRET_KEY: your-production-secret-key-change-this
      
      # Logging
      LOG_LEVEL: INFO
    depends_on:
      - mongo
      - redis
    volumes:
      - ./backend/logs:/app/logs
    networks:
      - mercadosniper-network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mercadosniper-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      # API Configuration
      NEXT_PUBLIC_API_URL: http://localhost:8000
      NEXT_PUBLIC_SOCKET_URL: http://localhost:8000
      NEXT_PUBLIC_APP_NAME: MercadoSniper
      NEXT_PUBLIC_APP_VERSION: 1.0.0
      
      # Next.js Configuration
      NODE_ENV: production
      NEXT_TELEMETRY_DISABLED: 1
      PORT: 3000
      HOSTNAME: 0.0.0.0
    depends_on:
      - backend
    networks:
      - mercadosniper-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: mercadosniper-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - mercadosniper-network
    profiles:
      - production

volumes:
  mongo_data:
    driver: local
  redis_data:
    driver: local

networks:
  mercadosniper-network:
    driver: bridge 